import History
import sys

class TColumn:


	def __init__(self, colNum, totalSegs):
		self.tabSize = 20
		self.segDownloaded = []
		self.toalSegs = totalSegs
		self.activities = []
		self.activityCounter = 0
		self.colNum = colNum
		self.printSegs = False

	def reachedEnd(self):
		return self.activityCounter == len(self.activities)-1

	def getTabSize(self):
		return " " * self.tabSize * self.colNum

	def update(self):
		self.activities = History.getHistory(self.colNum)
		#print self.activities
	
	def reachedEnd(self):
		if self.activityCounter >= len(self.activities):
			return True
		return False

	def __gt__(self,other):
		return self.getTopTimestamp() > other.getTopTimestamp()

	def getTopTimestamp(self):
		return self.activities[self.activityCounter][0]

	def addSegment(self, segId):
		self.segDownloaded.append(segId)

	def __str__(self):
		if self.printSegs:
			return self.getTabSize() + str(self.segDownloaded)
			self.printSegs = False
		else:
			self.activityCounter += 1
			try:


class Terminal :

	def __init__(self, numProcs, numSegs):
		self.numProcs = numProcs
		self.numSegs = numSegs
		self.columns = []
		self.initColumns()

	def initColumns(self):
		self.columns = [ TColumn(numProc, self.numSegs) for numProc in range(self.numProcs) ]

	def update(self):
		for col in self.columns:
			col.update()

	def show(self):

		while len(self.columns):
			#print [str(x) for x in self.columns]
			#sys.exit(1)
			nCol = self.findNextColumn()
			nColumn = str(nCol)
			if nColumn != str(None):
				print nColumn
			else:
				self.columns.remove(nCol)
				


	def findNextColumn(self):
